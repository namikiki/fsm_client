// Code generated by ent, DO NOT EDIT.

package dir

import (
	"fsm_client/pkg/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.Dir {
	return predicate.Dir(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.Dir {
	return predicate.Dir(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.Dir {
	return predicate.Dir(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.Dir {
	return predicate.Dir(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.Dir {
	return predicate.Dir(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.Dir {
	return predicate.Dir(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.Dir {
	return predicate.Dir(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.Dir {
	return predicate.Dir(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.Dir {
	return predicate.Dir(sql.FieldLTE(FieldID, id))
}

// SyncID applies equality check predicate on the "sync_id" field. It's identical to SyncIDEQ.
func SyncID(v string) predicate.Dir {
	return predicate.Dir(sql.FieldEQ(FieldSyncID, v))
}

// Dir applies equality check predicate on the "dir" field. It's identical to DirEQ.
func Dir(v string) predicate.Dir {
	return predicate.Dir(sql.FieldEQ(FieldDir, v))
}

// Level applies equality check predicate on the "level" field. It's identical to LevelEQ.
func Level(v uint64) predicate.Dir {
	return predicate.Dir(sql.FieldEQ(FieldLevel, v))
}

// Deleted applies equality check predicate on the "deleted" field. It's identical to DeletedEQ.
func Deleted(v bool) predicate.Dir {
	return predicate.Dir(sql.FieldEQ(FieldDeleted, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Dir {
	return predicate.Dir(sql.FieldEQ(FieldCreateTime, v))
}

// ModTime applies equality check predicate on the "mod_time" field. It's identical to ModTimeEQ.
func ModTime(v time.Time) predicate.Dir {
	return predicate.Dir(sql.FieldEQ(FieldModTime, v))
}

// SyncIDEQ applies the EQ predicate on the "sync_id" field.
func SyncIDEQ(v string) predicate.Dir {
	return predicate.Dir(sql.FieldEQ(FieldSyncID, v))
}

// SyncIDNEQ applies the NEQ predicate on the "sync_id" field.
func SyncIDNEQ(v string) predicate.Dir {
	return predicate.Dir(sql.FieldNEQ(FieldSyncID, v))
}

// SyncIDIn applies the In predicate on the "sync_id" field.
func SyncIDIn(vs ...string) predicate.Dir {
	return predicate.Dir(sql.FieldIn(FieldSyncID, vs...))
}

// SyncIDNotIn applies the NotIn predicate on the "sync_id" field.
func SyncIDNotIn(vs ...string) predicate.Dir {
	return predicate.Dir(sql.FieldNotIn(FieldSyncID, vs...))
}

// SyncIDGT applies the GT predicate on the "sync_id" field.
func SyncIDGT(v string) predicate.Dir {
	return predicate.Dir(sql.FieldGT(FieldSyncID, v))
}

// SyncIDGTE applies the GTE predicate on the "sync_id" field.
func SyncIDGTE(v string) predicate.Dir {
	return predicate.Dir(sql.FieldGTE(FieldSyncID, v))
}

// SyncIDLT applies the LT predicate on the "sync_id" field.
func SyncIDLT(v string) predicate.Dir {
	return predicate.Dir(sql.FieldLT(FieldSyncID, v))
}

// SyncIDLTE applies the LTE predicate on the "sync_id" field.
func SyncIDLTE(v string) predicate.Dir {
	return predicate.Dir(sql.FieldLTE(FieldSyncID, v))
}

// SyncIDContains applies the Contains predicate on the "sync_id" field.
func SyncIDContains(v string) predicate.Dir {
	return predicate.Dir(sql.FieldContains(FieldSyncID, v))
}

// SyncIDHasPrefix applies the HasPrefix predicate on the "sync_id" field.
func SyncIDHasPrefix(v string) predicate.Dir {
	return predicate.Dir(sql.FieldHasPrefix(FieldSyncID, v))
}

// SyncIDHasSuffix applies the HasSuffix predicate on the "sync_id" field.
func SyncIDHasSuffix(v string) predicate.Dir {
	return predicate.Dir(sql.FieldHasSuffix(FieldSyncID, v))
}

// SyncIDEqualFold applies the EqualFold predicate on the "sync_id" field.
func SyncIDEqualFold(v string) predicate.Dir {
	return predicate.Dir(sql.FieldEqualFold(FieldSyncID, v))
}

// SyncIDContainsFold applies the ContainsFold predicate on the "sync_id" field.
func SyncIDContainsFold(v string) predicate.Dir {
	return predicate.Dir(sql.FieldContainsFold(FieldSyncID, v))
}

// DirEQ applies the EQ predicate on the "dir" field.
func DirEQ(v string) predicate.Dir {
	return predicate.Dir(sql.FieldEQ(FieldDir, v))
}

// DirNEQ applies the NEQ predicate on the "dir" field.
func DirNEQ(v string) predicate.Dir {
	return predicate.Dir(sql.FieldNEQ(FieldDir, v))
}

// DirIn applies the In predicate on the "dir" field.
func DirIn(vs ...string) predicate.Dir {
	return predicate.Dir(sql.FieldIn(FieldDir, vs...))
}

// DirNotIn applies the NotIn predicate on the "dir" field.
func DirNotIn(vs ...string) predicate.Dir {
	return predicate.Dir(sql.FieldNotIn(FieldDir, vs...))
}

// DirGT applies the GT predicate on the "dir" field.
func DirGT(v string) predicate.Dir {
	return predicate.Dir(sql.FieldGT(FieldDir, v))
}

// DirGTE applies the GTE predicate on the "dir" field.
func DirGTE(v string) predicate.Dir {
	return predicate.Dir(sql.FieldGTE(FieldDir, v))
}

// DirLT applies the LT predicate on the "dir" field.
func DirLT(v string) predicate.Dir {
	return predicate.Dir(sql.FieldLT(FieldDir, v))
}

// DirLTE applies the LTE predicate on the "dir" field.
func DirLTE(v string) predicate.Dir {
	return predicate.Dir(sql.FieldLTE(FieldDir, v))
}

// DirContains applies the Contains predicate on the "dir" field.
func DirContains(v string) predicate.Dir {
	return predicate.Dir(sql.FieldContains(FieldDir, v))
}

// DirHasPrefix applies the HasPrefix predicate on the "dir" field.
func DirHasPrefix(v string) predicate.Dir {
	return predicate.Dir(sql.FieldHasPrefix(FieldDir, v))
}

// DirHasSuffix applies the HasSuffix predicate on the "dir" field.
func DirHasSuffix(v string) predicate.Dir {
	return predicate.Dir(sql.FieldHasSuffix(FieldDir, v))
}

// DirEqualFold applies the EqualFold predicate on the "dir" field.
func DirEqualFold(v string) predicate.Dir {
	return predicate.Dir(sql.FieldEqualFold(FieldDir, v))
}

// DirContainsFold applies the ContainsFold predicate on the "dir" field.
func DirContainsFold(v string) predicate.Dir {
	return predicate.Dir(sql.FieldContainsFold(FieldDir, v))
}

// LevelEQ applies the EQ predicate on the "level" field.
func LevelEQ(v uint64) predicate.Dir {
	return predicate.Dir(sql.FieldEQ(FieldLevel, v))
}

// LevelNEQ applies the NEQ predicate on the "level" field.
func LevelNEQ(v uint64) predicate.Dir {
	return predicate.Dir(sql.FieldNEQ(FieldLevel, v))
}

// LevelIn applies the In predicate on the "level" field.
func LevelIn(vs ...uint64) predicate.Dir {
	return predicate.Dir(sql.FieldIn(FieldLevel, vs...))
}

// LevelNotIn applies the NotIn predicate on the "level" field.
func LevelNotIn(vs ...uint64) predicate.Dir {
	return predicate.Dir(sql.FieldNotIn(FieldLevel, vs...))
}

// LevelGT applies the GT predicate on the "level" field.
func LevelGT(v uint64) predicate.Dir {
	return predicate.Dir(sql.FieldGT(FieldLevel, v))
}

// LevelGTE applies the GTE predicate on the "level" field.
func LevelGTE(v uint64) predicate.Dir {
	return predicate.Dir(sql.FieldGTE(FieldLevel, v))
}

// LevelLT applies the LT predicate on the "level" field.
func LevelLT(v uint64) predicate.Dir {
	return predicate.Dir(sql.FieldLT(FieldLevel, v))
}

// LevelLTE applies the LTE predicate on the "level" field.
func LevelLTE(v uint64) predicate.Dir {
	return predicate.Dir(sql.FieldLTE(FieldLevel, v))
}

// DeletedEQ applies the EQ predicate on the "deleted" field.
func DeletedEQ(v bool) predicate.Dir {
	return predicate.Dir(sql.FieldEQ(FieldDeleted, v))
}

// DeletedNEQ applies the NEQ predicate on the "deleted" field.
func DeletedNEQ(v bool) predicate.Dir {
	return predicate.Dir(sql.FieldNEQ(FieldDeleted, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Dir {
	return predicate.Dir(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Dir {
	return predicate.Dir(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Dir {
	return predicate.Dir(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Dir {
	return predicate.Dir(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Dir {
	return predicate.Dir(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Dir {
	return predicate.Dir(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Dir {
	return predicate.Dir(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Dir {
	return predicate.Dir(sql.FieldLTE(FieldCreateTime, v))
}

// ModTimeEQ applies the EQ predicate on the "mod_time" field.
func ModTimeEQ(v time.Time) predicate.Dir {
	return predicate.Dir(sql.FieldEQ(FieldModTime, v))
}

// ModTimeNEQ applies the NEQ predicate on the "mod_time" field.
func ModTimeNEQ(v time.Time) predicate.Dir {
	return predicate.Dir(sql.FieldNEQ(FieldModTime, v))
}

// ModTimeIn applies the In predicate on the "mod_time" field.
func ModTimeIn(vs ...time.Time) predicate.Dir {
	return predicate.Dir(sql.FieldIn(FieldModTime, vs...))
}

// ModTimeNotIn applies the NotIn predicate on the "mod_time" field.
func ModTimeNotIn(vs ...time.Time) predicate.Dir {
	return predicate.Dir(sql.FieldNotIn(FieldModTime, vs...))
}

// ModTimeGT applies the GT predicate on the "mod_time" field.
func ModTimeGT(v time.Time) predicate.Dir {
	return predicate.Dir(sql.FieldGT(FieldModTime, v))
}

// ModTimeGTE applies the GTE predicate on the "mod_time" field.
func ModTimeGTE(v time.Time) predicate.Dir {
	return predicate.Dir(sql.FieldGTE(FieldModTime, v))
}

// ModTimeLT applies the LT predicate on the "mod_time" field.
func ModTimeLT(v time.Time) predicate.Dir {
	return predicate.Dir(sql.FieldLT(FieldModTime, v))
}

// ModTimeLTE applies the LTE predicate on the "mod_time" field.
func ModTimeLTE(v time.Time) predicate.Dir {
	return predicate.Dir(sql.FieldLTE(FieldModTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Dir) predicate.Dir {
	return predicate.Dir(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Dir) predicate.Dir {
	return predicate.Dir(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Dir) predicate.Dir {
	return predicate.Dir(func(s *sql.Selector) {
		p(s.Not())
	})
}
